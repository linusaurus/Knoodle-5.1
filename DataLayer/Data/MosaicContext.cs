// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DataLayer.Data.Configurations;
using DataLayer.Entity;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;

#nullable disable

namespace DataLayer.Data
{
    public partial class MosaicContext : DbContext
    {
        public MosaicContext()
        {
        }

        public MosaicContext(DbContextOptions<MosaicContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Asset> Asset { get; set; }
        public virtual DbSet<Attachment> Attachment { get; set; }
        public virtual DbSet<BOM> BOM { get; set; }
        public virtual DbSet<BOMListItem> BOMListItem { get; set; }
        public virtual DbSet<Claim> Claim { get; set; }
        public virtual DbSet<ClaimDocument> ClaimDocument { get; set; }
        public virtual DbSet<ClaimItem> ClaimItem { get; set; }
        public virtual DbSet<Delivery> Delivery { get; set; }
        public virtual DbSet<DeliveryItem> DeliveryItem { get; set; }
        public virtual DbSet<Document> Document { get; set; }
        public virtual DbSet<DocumentParts> DocumentParts { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<Globals> Globals { get; set; }
        public virtual DbSet<Inventory> Inventory { get; set; }
        public virtual DbSet<Job> Job { get; set; }
        public virtual DbSet<JobSite> JobSite { get; set; }
        public virtual DbSet<Manu> Manu { get; set; }
        public virtual DbSet<NFRC> NFRC { get; set; }
        public virtual DbSet<OpCode> OpCode { get; set; }
        public virtual DbSet<OrderFee> OrderFee { get; set; }
        public virtual DbSet<OrderReceiptItems> OrderReceiptItems { get; set; }
        public virtual DbSet<OrderReciept> OrderReciept { get; set; }
        public virtual DbSet<OrderState> OrderState { get; set; }
        public virtual DbSet<Part> Part { get; set; }
        public virtual DbSet<PartCategory> PartCategory { get; set; }
        public virtual DbSet<PartTypes> PartTypes { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<PurchaseLineItem> PurchaseLineItem { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrder { get; set; }
        public virtual DbSet<Resource> Resource { get; set; }
        public virtual DbSet<ResourceVersion> ResourceVersion { get; set; }
        public virtual DbSet<ShipBy> ShipBy { get; set; }
        public virtual DbSet<SubAssembly> SubAssembly { get; set; }
        public virtual DbSet<Supplier> Supplier { get; set; }
        public virtual DbSet<Task> Task { get; set; }
        public virtual DbSet<TransActionType> TransActionType { get; set; }
        public virtual DbSet<UnitOfMeasure> UnitOfMeasure { get; set; }
        public virtual DbSet<WorkCenter> WorkCenter { get; set; }
        public virtual DbSet<WorkOrder> WorkOrder { get; set; }
        public virtual DbSet<WorkOrderRouting> WorkOrderRouting { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=FILE-SERVER;Initial Catalog=Mosaic;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.ApplyConfiguration(new Configurations.AssetConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.AttachmentConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.BOMConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.BOMListItemConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ClaimConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ClaimDocumentConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ClaimItemConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.DeliveryConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.DeliveryItemConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.DocumentConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.DocumentPartsConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.EmployeeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.GlobalsConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.InventoryConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.JobConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.JobSiteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ManuConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.NFRCConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OpCodeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OrderFeeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OrderReceiptItemsConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OrderRecieptConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.OrderStateConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PartConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PartCategoryConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PartTypesConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ProductConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PurchaseLineItemConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.PurchaseOrderConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ResourceConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ResourceVersionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.ShipByConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.SubAssemblyConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.SupplierConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TaskConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.TransActionTypeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.UnitOfMeasureConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.WorkCenterConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.WorkOrderConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.WorkOrderRoutingConfiguration());
            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
