// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DataLayer.Data;
using DataLayer.Entity;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore;
using System;


namespace DataLayer.Data.Configurations
{
    public partial class PartConfiguration : IEntityTypeConfiguration<Part>
    {
        public void Configure(EntityTypeBuilder<Part> entity)
        {
            entity.Property(e => e.AddedBy).HasMaxLength(60);

            entity.Property(e => e.Amount_Required).HasColumnType("decimal(18, 2)");

            entity.Property(e => e.CARBtrack).HasDefaultValueSql("((0))");

            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 4)")
                .HasDefaultValueSql("((0.0))");

            entity.Property(e => e.DateAdded).HasColumnType("datetime");

            entity.Property(e => e.ItemDescription)
                .HasMaxLength(512)
                .HasDefaultValueSql("(' ')");

            entity.Property(e => e.ItemName)
                .HasMaxLength(120)
                .HasDefaultValueSql("(' ')");

            entity.Property(e => e.Location)
                .HasMaxLength(10)
                .HasDefaultValueSql("(' ')")
                .IsFixedLength(true);

            entity.Property(e => e.ManuID).HasDefaultValueSql("((1))");

            entity.Property(e => e.ManuPartNum)
                .HasMaxLength(120)
                .IsFixedLength(true);

            entity.Property(e => e.MarkUp)
                .HasColumnType("decimal(18, 4)")
                .HasDefaultValueSql("((0.0))");

            entity.Property(e => e.ModifiedBy).HasMaxLength(60);

            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");

            entity.Property(e => e.ObsoluteFlag).HasDefaultValueSql("((0))");

            entity.Property(e => e.PartNum)
                .HasMaxLength(160)
                .IsUnicode(false)
                .HasDefaultValueSql("(' ')");

            entity.Property(e => e.PartTypeID).HasDefaultValueSql("((10))");

            entity.Property(e => e.SKU)
                .HasMaxLength(50)
                .HasDefaultValueSql("(' ')");

            entity.Property(e => e.UnitOfMeasureID).HasDefaultValueSql("((1))");

            entity.Property(e => e.UseSupplierNameFlag).HasDefaultValueSql("((1))");

            entity.Property(e => e.Waste)
                .HasColumnType("decimal(18, 4)")
                .HasDefaultValueSql("((0.0))");

            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 4)")
                .HasDefaultValueSql("((0.0))");

            entity.HasOne(d => d.UnitOfMeasure)
                .WithMany(p => p.Part)
                .HasForeignKey(d => d.UnitOfMeasureID)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK_Part_UnitOfMeasure");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Part> entity);
    }
}
