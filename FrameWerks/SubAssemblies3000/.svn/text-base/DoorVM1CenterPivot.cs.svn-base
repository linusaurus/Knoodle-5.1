using System;
using System.Collections.Generic;
using System.Text;

namespace FrameWerks.System3000
{
    [UnitType("Dumb Module")]
    public class DoorVM1CenterPivot : SubAssemblyBase
    {

        #region Fields

        static int createID;
        Part part;
        string partleader;

        #endregion

        #region Constructor

        public DoorVM1CenterPivot()
        {
            m_subAssemblyID = Guid.NewGuid();
            this.ModelID = "Sys3000-DoorVM1CenterPivot";


        }

        #endregion

        #region Error Handling

        System.Exception HardwareApplicationError(string description)
        {

            return new SystemException(description);
        }

        #endregion

        #region Methods

        //Bill of Material
        public override void Build()
        {

            partleader = this.Parent.UnitID + "." + this.CreateID.ToString();


            #region Panel-Frame


            // StileRight -->>
            part = new Part(1167, "StileR", this, 1, m_subAssemblyHieght);
            part.PartGroupType = "Panel-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // StileLeft <<--
            part = new Part(1167, "StileL", this, 1, m_subAssemblyHieght);
            part.PartGroupType = "Panel-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // RailTop ^^
            part = new Part(1167, "RailT", this, 1, m_subAssemblyWidth);
            part.PartGroupType = "Panel-Parts";
            part.PartLabel = "PivotWalkingBeem";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // RailBottom ||
            part = new Part(1167, "RailB", this, 1, m_subAssemblyWidth);
            part.PartGroupType = "Panel-Parts";
            part.PartLabel = "PivotCenterHung";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // Hardware Build-Out
            part = new Part(1167, "Hardware Build-out", this, 1, m_subAssemblyHieght - (1.3125m * 2.0m));
            part.PartGroupType = "Panel-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            #endregion

            #region Filler

            part = new Part(1816, "Filler-Top", this, 1, m_subAssemblyWidth + 0.25m);
            part.PartGroupType = "Filler-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            part = new Part(1817, "Filler-Bottom", this, 1, m_subAssemblyWidth + 0.25m);
            part.PartGroupType = "Filler-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            part = new Part(1816, "Filler-Left", this, 1, m_subAssemblyHieght + 0.25m);
            part.PartGroupType = "Filler-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            part = new Part(1813, "Filler-Right", this, 1, m_subAssemblyHieght + 0.25m);
            part.PartGroupType = "Filler-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            #endregion

            #region Stops

            // LeftVerticalStopsLower
            part = new Part(809, "StopsL", this, 2, m_subAssemblyHieght - (1.3125m * 2.0m));
            part.PartGroupType = "Stop-Parts";
            part.PartLabel = "Miter Ends";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            // RightVerticalStops
            part = new Part(809, "StopsR", this, 2, m_subAssemblyHieght - (1.3125m * 2.0m));
            part.PartGroupType = "Stop-Parts";
            part.PartLabel = "Miter Ends";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // TopHorizontalStops
            part = new Part(809, "StopsT", this, 2, m_subAssemblyWidth - (1.3125m * 3.0m));
            part.PartGroupType = "Stop-Parts";
            part.PartLabel = "Miter Ends";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // BottomHorizontalStopFront
            string crap;
            crap = Utils.Dim.StopWeepMachining(m_subAssemblyWidth - 1.3125m * 3.0m);
            part = new Part(809, "StopFrontB", this, 1, m_subAssemblyWidth - (1.3125m * 3.0m));
            part.PartGroupType = "Stop-Parts";
            part.PartLabel = "1) Miter Ends" + "\r\n" +
                             "2)" + crap;
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            // BottomHorizontalStopRear
            part = new Part(809, "StopRearB", this, 1, m_subAssemblyWidth - (1.3125m * 3.0m));
            part.PartGroupType = "Stop-Parts";
            part.PartLabel = "Miter Ends";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            #endregion

            #region Muntin

            // Muntin Bar ||
            part = new Part(1862, "Muntin Bars-V", this, 2, m_subAssemblyHieght - 2.0m * 2.0625m);
            part.PartGroupType = "Muntin-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);

            #endregion

            #region FoamTape


            // Foam Tape Vertical ||  #2808
            part = new Part(2808, "FoamTape", this, 2, m_subAssemblyHieght - 2.0m * 2.0625m);
            part.PartGroupType = "FoamTape-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            #endregion

            #region HardWare Logic


            // WalkingBeam
            part = new Part(28, "WalkingBeam", this, 1, 0.0m);
            part.PartGroupType = "Hardware-Parts";
            part.PartLabel = "CenterPivot";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            // CenterBottomArm
            part = new Part(961, "CenterBottomArm", this, 1, 0.0m);
            part.PartGroupType = "Hardware-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);
           

            // BTS80
            part = new Part(300, "BTS80", this, 1, 0.0m);
            part.PartGroupType = "Hardware-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            // Assembly Braces
            part = new Part(1117, "Assembly Braces", this, 8, 0.0m);
            part.PartGroupType = "Hardware-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);



            Hoppe hoppe = new Hoppe(m_subAssemblyHieght, this);
            foreach (Part innerpart in hoppe.Parts)
            {
                innerpart.PartIdentifier = partleader + "." + Convert.ToString(createID++);
                this.Parts.Add(innerpart);

            }

            Hoppe hoppe2 = new Hoppe(m_subAssemblyHieght, this);
            foreach (Part innerpart in hoppe2.Parts)
            {
                innerpart.PartIdentifier = partleader + "." + Convert.ToString(createID++);
                this.Parts.Add(innerpart);

            }


            #endregion

            #region WeatherSeals


            //Door Bulb Seals

            part = new Part(1769, "Bulb Seal Door", this, 1, ((m_subAssemblyHieght * 2.0m) + (m_subAssemblyWidth * 2.0m)));
            part.PartGroupType = "Seals-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            // Glazing Seal

            decimal peri = FrameWerks.Utils.Dim.Perimeter(m_subAssemblyWidth - (1.3125m * 2.0m),
             m_subAssemblyHieght - (1.3125m * 2.0m));
            part = new Part(1819, "Glazing Seal", this, 1, peri *= 2.0m);
            part.PartGroupType = "Seals-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);


            // Door Bottom

            part = new Part(1518, "Door Bottom", this, 1, m_subAssemblyWidth);
            part.PartGroupType = "Seals-Parts";
            part.PartLabel = "";
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);



            #endregion

            #region Glass


            //Glass Panel
            part = new Part(2828);
            part.FunctionalName = "Glass";
            part.PartGroupType = "Glass-Parts";
            part.Qnty = 1;
            part.PartName = "PartName";
            part.PartLabel = "";
            part.ContainerAssembly = this;
            part.PartWidth = m_subAssemblyWidth - (1.625m * 3.0m);
            part.PartLength = m_subAssemblyHieght - (1.625m * 2.0m);
            part.PartIdentifier = partleader + "." + Convert.ToString(createID++);
            m_parts.Add(part);



            #endregion

                #region Labor


            Labor.LaborPart design =
                new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Design", 4.0m, 80.0m);
            this.LaborParts.Add(design);
            //Collect Information on Sizes: Measure: Provide Information for Approval: Order: Supervision

            Labor.LaborPart draft =
               new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Draft", 3.0m, 80.0m);
            this.LaborParts.Add(draft);
            //Typical Drawings

            Labor.LaborPart metalhours =
               new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "MetalHours", 12.0m, 80.0m);
            this.LaborParts.Add(metalhours);
            //1 Recieve: 1 Handle: 1 CutSash: 1 CutGlassStop: 1.5 Machine: 1.5 Hardware Prep: 1 Mount Hardware: 4 Weld:

            Labor.LaborPart Finish =
               new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Finish", 4.0m, 80.0m);
            this.LaborParts.Add(Finish);
            //2 Sand Linegrain: 2 Finish:

            Labor.LaborPart glazing =
               new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Glazing", (this.Area * .10m) + 4.0m, 80.0m);
            this.LaborParts.Add(glazing);
            //0.5 Order: 0.5 Recieve: 0.5 Inspect/Reject: 0.5 Store/Handle: 0.5 SetGlass/Shim&Calk: 0.5 Set GlassStop: 0.5 GlazingSeals

            Labor.LaborPart prehang =
               new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Prehang", (this.Area * .10m) + 3.0m, 80.0m);
            this.LaborParts.Add(prehang);
            //2 FitSash into Frame: 1 Mount Weather Strips/Seals

            Labor.LaborPart stage =
               new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Stage", 1.0m, 80.0m);
            this.LaborParts.Add(stage);
            //1 Stage

            Labor.LaborPart load =
                new FrameWerks.Labor.LaborPart(this, UnitOfLaborCosting.unit, "Load", 1.0m, 80.0m);
            this.LaborParts.Add(load);
            //1 Load


            #endregion



        }

        #endregion

    }
}
